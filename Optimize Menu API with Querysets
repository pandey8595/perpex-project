# models.py
from django.db import models

class Category(models.Model):
    name = models.CharField(max_length=100)

    def __str__(self):
        return self.name


class Menu(models.Model):
    name = models.CharField(max_length=100)
    category = models.ForeignKey(Category, on_delete=models.CASCADE, related_name="menu_items")

    def __str__(self):
        return f"{self.name} ({self.category})"

/////////////////////////////////////////////////////////////////////
# serializers.py
from rest_framework import serializers
from .models import Menu

class MenuSerializer(serializers.ModelSerializer):
    category = serializers.CharField(source="category.name")  # Show category name directly

    class Meta:
        model = Menu
        fields = ["id", "name", "category"]

//////////////////////////////////////////////////////////////////////////

# views.py
from rest_framework import viewsets
from .models import Menu
from .serializers import MenuSerializer

class MenuViewSet(viewsets.ReadOnlyModelViewSet):
    queryset = Menu.objects.select_related("category")  # âœ… Optimize with select_related
    serializer_class = MenuSerializer
//////////////////////////////////////////////////////////////
# urls.py
from django.urls import path, include
from rest_framework.routers import DefaultRouter
from .views import MenuViewSet

router = DefaultRouter()
router.register("menu", MenuViewSet)

urlpatterns = [
    path("api/", include(router.urls)),
]
/////////////////////////////////////////
